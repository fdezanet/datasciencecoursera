h + geom_histogram()
sumactivity <- as.data.frame(sapply(split(activity$step,activity$date),sum,na.rm=TRUE))
summary(sumactivity)
hist(sumactivity)
str(sumactivity)
totalsteps <- as.data.frame(sapply(split(activity$step,activity$date),sum,na.rm=TRUE))
colnames(totalsteps) <-  c("total steps") #donne un nom à la colonne
summary(totalsteps)
hist(totalsteps)
colnames(totalsteps) <-  c("totalsteps") #donne un nom à la colonne
hist(totalsteps$totalsteps)
histogram(totalsteps$totalsteps)
?histogram
hist(totalsteps$totalsteps,type = count)
hist(totalsteps$totalsteps,type = "count")
hist(totalsteps$totalsteps,type = c("count"))
hist(totalsteps$totalsteps,type = "density")
hist(totalsteps$totalstpes,type = "density")
hist(totalsteps$totalstpes,data=totalsteps,type = "density")
hist(totalsteps$totalstpes)
hist(totalsteps$totalsteps)
histogram(totalsteps$totalsteps,data=totalsteps)
histogram(totalsteps$totalsteps,data=totalsteps,type = "count")
histogram(totalsteps$totalsteps,data=totalsteps,type = "count",xlab="Total steps per day")
histogram(totalsteps$totalsteps,data=totalsteps,type = "count",xlab="Total steps per day",ylab="count")
qplot(totalsteps,data = totalsteps)
?qplot
qplot(totalsteps,data = totalsteps,xlab="Total steps per day",ylab="count")
qplot(totalsteps,data = totalsteps,xlab="Total steps per day",ylab="count",main="Histogram of the total number of steps taken each day")
qplot(totalsteps,data = totalsteps,xlab="Total steps per day",ylab="Count",
averagesteps <- as.data.frame(sapply(split(activity$step,activity$interval),mean,na.rm=TRUE))
?split
ncol(averagesteps)
colnames(averagesteps) <- c("Average")
ncol(averagesteps)
averagesteps$inrerval <- unique(activity$interval)
averagesteps <- as.data.frame(sapply(split(activity$step,activity$interval),mean,na.rm=TRUE))
colnames(averagesteps) <- c("Average")
averagesteps$interval <- unique(activity$interval)
ggplot(data=averagesteps,aes(interval,Average)) + geom_line()
plot(interval~Average,data=averagesteps,type="1")
plot(interval~Average,type="1")
averagesteps <- as.data.frame(sapply(split(activity$step,activity$interval),mean,na.rm=TRUE))
colnames(averagesteps) <- c("average")
averagesteps$interval <- unique(activity$interval)
plot(interval~average,data=averagesteps,type="1")
ggplot(data=averagesteps,aes(interval,average)) + geom_line()
?plot
averagesteps <- unique(activity$interval)
averagesteps <- unique(activity$interval)
averagesteps <- as.dataframe(unique(activity$interval))
averagesteps <- as.data.frame(unique(activity$interval))
averagesteps <- as.data.frame(unique(activity$interval),colnames="interval")
averagesteps <- as.data.frame(unique(activity$interval),colname="interval")
averagesteps <- as.data.frame(unique(activity$interval));colnames(averagesteps)<-c("interval")
averagesteps$average <- sapply(split(activity$step,activity$interval),mean,na.rm=TRUE)
averagesteps$average <- as.data.frame(sapply(split(activity$step,activity$interval),mean,na.rm=TRUE))
averagesteps <- as.data.frame(sapply(split(activity$step,activity$interval),mean,na.rm=TRUE))
averagesteps <- as.data.frame(sapply(split(activity$step,activity$interval),mean,na.rm=TRUE));colnames(averagesteps)<-c("average")
averagesteps$interval <- unique(activity$interval))
averagesteps$interval <- unique(activity$interval)
averagesteps$rownames
averagesteps$row.names
row.names(averagesteps)
averagesteps$interval <- row.names(averagesteps)
averagesteps <- as.data.frame(average = sapply(split(activity$step,activity$interval),mean,na.rm=TRUE))
averagesteps <- data.frame(average = sapply(split(activity$step,activity$interval),mean,na.rm=TRUE))
averagesteps$interval <- row.names(averagesteps)
ggplot(data=averagesteps,aes(interval,average)) + geom_line()
plot(interval~average,data=averagesteps,type="1")
ggplot(data=averagesteps,aes(interval,average)) + geom_line()
ggplot(averagesteps,aes(interval,average)) + geom_line()
averagesteps <- data.frame(average = sapply(split(activity$step,activity$interval),mean,na.rm=TRUE))
averagesteps$interval <- row.names(averagesteps)
ggplot(averagesteps,aes(interval,average)) + geom_line()
qplot(interval~average,data=averagesteps,type =1)
qplot(interval~average,data=averagesteps,type = "1")
qplot(interval~average,data=averagesteps)
?qplot
qplot(interval,average,data=averagesteps)
qplot(interval,average,data=averagesteps,type="1")
qplot(interval,average,data=averagesteps,type="1")
?qplot
qplot(interval,average,data=averagesteps)
averagesteps$interval <- as.numeric(row.names(averagesteps))
ggplot(averagesteps,aes(interval,average)) + geom_line()
averagemax <- max(averagesteps$average)
averagemax <- max(averagesteps$average)
max(averagesteps$average)
?subset
maxsteps <- subset(averagesteps$interval,averagesteps$average == max(averagesteps$average))
maxsteps
install.packages("Hmisc")
library(plyr)
library(Hmisc)
missing <- sum(is.na(activity$steps))
missing
df2 <- ddply(activity, "date", mutate, imputed.value = impute(steps, mean))
edit(df2)
class(df2)
?ddply
?mutate
?imputed.value
??imputed.value
?mutate
df2 <- ddply(activity, "date", mutate, activity, setps = impute(steps, mean))
test <- ddply(activity, "date", mutate, activity, setps = impute(steps, mean))
test <- ddply(activity, "date", mutate, activity, steps = impute(steps, mean))
test <- ddply(activity, "date", mutate, activity, imputed.steps = impute(steps, mean))
test <- ddply(activity, "date", mutate, imputed.steps = impute(steps, mean))
summary(test)
meanlist=numeric(nlevels)
listedates<-levels(activity$date)
listedates <- levels(activity$date)
listedates <- unique(activity$date)
ndates <- lenght(unique(activity$date))
ndates
ndates <- length(unique(activity$date))
ndates
meanlist=numeric(ndates)
meanlist
activity[,1]
activity[,2]
mydate = activity[1,2]
mydate
activity[activity[,2]==mydate,2]
activity[activity[,2]==mydate,1]
mydate <- activity[290,2]
activity[activity[,2]==mydate,1]
mean(activity[activity[,2]==mydate,1])
nrow(activity)
for (i in 1:nrow(activity)){
if is.na(activity[i,1]) == TRUE {
activity[i,1] <- mean(activity[activity[,2]==activity[i,2],1])
}
}
is.na(activity[1,1])
is.na(activity[1,1]) == TRUE
is.na(activity[1,1]) == FALSE
for (i in 1:nrow(activity))
{
if is.na(activity[i,1]) == TRUE
{
activity[i,1] <- mean(activity[activity[,2] == activity[i,2],1])
}
}
for (i in 1:nrow(activity))
{
if is.na(activity[i,1]) == TRUE
print(i)
{
activity[i,1] <- mean(activity[activity[,2] == activity[i,2],1])
}
}
for (i in 1:nrow(activity))
{
if is.na(activity[i,1]) == TRUE
{
print(i)
#activity[i,1] <- mean(activity[activity[,2] == activity[i,2],1])
}
}
for (i in 1:nrow(activity))
{
if is.na(activity[i,1]) == TRUE
for (i in 1:nrow(activity))
{
if (is.na(activity[i,1]) == TRUE)
{
#print(i)
activity[i,1] <- mean(activity[activity[,2] == activity[i,2],1])
}
}
activity <- read.csv("activity.csv",header=TRUE,colClasses=c("numeric","Date","numeric"),na.strings="NA")
for (i in 289:nrow(activity))
{
if (is.na(activity[i,1]) == TRUE)
{
#print(i)
activity[i,1] <- mean(activity[activity[,2] == activity[i,2],1])
}
}
sum(is.na(activity$steps))
for (i in 289:nrow(activity))
{
if (is.na(activity[i,1]) == TRUE)
{
print(i)
#activity[i,1] <- mean(activity[activity[,2] == activity[i,2],1])
}
}
for (i in 1:nrow(activity))
{
if (is.na(activity[i,1]) == TRUE)
{
activity[i,1] <- mean(activity[activity[,3] == activity[i,3],1])
}
}
sum(is.na(activity$steps))
i <- activity[1,1]
mean(activity[activity[,3] == activity[i,3],1])
i
i <- activity[1,3]
mean(activity[activity[,3] == activity[i,3],1])
activity[,1]
activity[,1:3]
activity[activity[activity[,3] == activity[i,3],1:3]
i <- activity[1,3]
i <- activity[1,3]
activity[,1:3]
activity[activity[,3] == activity[i,3],1:3]
subset(activity,activity[activity[,3] == activity[i,3])
?subset
subset(activity,activity[,3] == activity[i,3])
i
x <- subset(activity,activity[,3] == activity[1,3])
mean(x,na.rm=TRUE)
mean(x,rm.na=TRUE)
mean(x,na.rm=TRUE)
mean(x$steps,na.rm=TRUE)
x <- activity[activity,activity[,3] == activity[1,3],1]
x <- activity[,1]
x <- activity[,1]
for (i in 1:nrow(activity))
{
if (is.na(activity[i,1]) == TRUE)
{
x <- subset(activity,activity[,3] == activity[i,3])
activity[i,1] <- mean(x$steps,na.rm=TRUE)
}
}
sum(is.na(activity$steps))
activity2 <- activity
class(activity2)
?weekdays
activity <- read.csv("activity.csv",header=TRUE,colClasses=c("numeric","Date","numeric"),na.strings="NA")
activity$date <- ymd(activity$date) ##transform column date as a date
class(activity)
activity2 <- activity
for (i in 1:nrow(activity2))
for (i in 1:nrow(activity2))
{
if (is.na(activity2[i,1]) == TRUE)
{
x <- subset(activity2,activity2[,3] == activity2[i,3])
activity2[i,1] <- mean(x$steps,na.rm=TRUE)
}
}
activity2$weekdays <- weekdays(activity2$date)
activity2$weekdays
edit(activity2)
activity2 <- activity
for (i in 1:nrow(activity2))
{
if (is.na(activity2[i,1]) == TRUE)
{
x <- subset(activity2,activity2[,3] == activity2[i,3])
activity2[i,1] <- mean(x$steps,na.rm=TRUE)
}
}
activity3 <- activity2
class(activity3)
edit(activity3)
edit(activity2)
summary(activity2)
activity3$weekdays <- weekdays(activity3$date)
summery(activity3)
summary(activity3)
activity3$weekdays <- weekdays(activity3$date,abbreviate=TRUE)
summary(activity3)
activity3$weekdays
activity3$weekdays <- as.factor(weekdays(activity3$date,abbreviate=TRUE))
summary(activity3)
levels(activity3$weekdays)
levels(activity3$weekdays) <-c("weekend","weekday","weekday","weekday","weekday","weekend","weekday")
summary(activity3)
activity <- read.csv("activity.csv",header=TRUE,colClasses=c("numeric","Date","numeric"),na.strings="NA")
activity$date <- ymd(activity$date) ##transform column date as a date
activity2 <- activity
for (i in 1:nrow(activity2))
{
if (is.na(activity2[i,1]) == TRUE)
{
x <- subset(activity2,activity2[,3] == activity2[i,3])
activity2[i,1] <- mean(x$steps,na.rm=TRUE)
}
}
activity2$weekdays <- as.factor(weekdays(activity3$date,abbreviate=TRUE))
levels(activity2$weekdays) <-c("weekend","weekday","weekday","weekday","weekday","weekend","weekday")
summary(activity2)
averagesteps2 <- data.frame(average = sapply(split(activity2$step,activity2$interval),mean,na.rm=TRUE))
averagesteps2$interval <- as.numeric(row.names(averagesteps))
averagesteps2$weekdays <- as.factor(activity2$weekdays)
activity2$weekdays <- as.factor(weekdays(activity3$date,abbreviate=TRUE))
levels(activity2$weekdays) <-c("weekend","weekday","weekday","weekday","weekday","weekend","weekday")
activity2 <- activity
for (i in 1:nrow(activity2))
{
if (is.na(activity2[i,1]) == TRUE)
{
x <- subset(activity2,activity2[,3] == activity2[i,3])
activity2[i,1] <- mean(x$steps,na.rm=TRUE)
}
}
activity2$weekdays <- as.factor(weekdays(activity3$date,abbreviate=TRUE))
levels(activity2$weekdays) <-c("weekend","weekday","weekday","weekday","weekday","weekend","weekday")
summary(activity2)
?split
weekday.act <- data.frame(subset(activity2,activity2$weekdays == "weekday"))
summary(weekday.act)
weekend.act <- data.frame(subset(activity2,activity2$weekdays == "weekend"))
summary(weekday.act)
summary(weekend.act)
weekday.average <- data.frame(average = sapply(split(weekday.act$step,weekday.act$interval),mean,na.rm=TRUE))
weekday.average <- data.frame(average = sapply(split(weekday.act$step,weekday.act$interval),mean,na.rm=TRUE),weekdays = "weekdays")
weekend.average <- data.frame(average = sapply(split(weekend.act$step,weekend.act$interval),mean,na.rm=TRUE),weekdays = "weekend")
summmary(weekday.average)
summary(weekday.average)
average <- rbind(weekday.average,weekend.average)
summary(average)
View(activity3)
View(activity2)
View(activity3)
View(average)
activity <- read.csv("activity.csv",header=TRUE,colClasses=c("numeric","Date","numeric"),na.strings="NA")
activity$date <- ymd(activity$date) ##transform column date as a date
View(activity)
View(activity)
activity <- read.csv("activity.csv",header=TRUE,colClasses=c("numeric","Date","numeric"),na.strings="NA")
activity$date <- ymd(activity$date) ##transform column date as a date
activity2 <- activity
View(activity2)
for (i in 1:nrow(activity2))
{
if (is.na(activity2[i,1]) == TRUE)
{
x <- subset(activity2,activity2[,3] == activity2[i,3])
activity2[i,1] <- mean(x$steps,na.rm=TRUE)
}
}
View(activity2)
activity2$weekdays <- as.factor(weekdays(activity3$date,abbreviate=TRUE))
levels(activity2$weekdays) <-c("weekend","weekday","weekday","weekday","weekday","weekend","weekday")
summary(activity2)
View(activity2)
activity2$weekdays <- as.factor(weekdays(activity2$date,abbreviate=TRUE))
levels(activity2$weekdays) <-c("weekend","weekday","weekday","weekday","weekday","weekend","weekday")
summary(activity2)
str(activity2)
weekday.act <- data.frame(subset(activity2,activity2$weekdays == "weekday"))
weekend.act <- data.frame(subset(activity2,activity2$weekdays == "weekend"))
summary(weekday.act)
str(weekday.act)
str(weekend.act)
weekday.ave <- data.frame(average = sapply(split(weekday.act$step,weekday.act$interval),
weekday.ave <- data.frame(average = sapply(split(weekday.act$step,weekday.act$interval),
mean,na.rm=TRUE),weekdays = "weekdays")
weekday.ave <- data.frame(average = sapply(split(weekday.act$step,weekday.act$interval),
mean,na.rm=TRUE),weekdays = "weekdays")
weekday.act <- data.frame(subset(activity2,activity2$weekdays == "weekday"))
weekend.act <- data.frame(subset(activity2,activity2$weekdays == "weekend"))
str(weekday.act)
str(weekend.act)
View(weekday.act)
View(weekend.act)
weekday.ave <- data.frame(average = sapply(split(weekday.act$step,weekday.act$interval),mean,na.rm=TRUE))
View(weekday.ave)
weekday.ave <- data.frame(average = sapply(split(weekday.act$step,weekday.act$interval),mean,na.rm=TRUE))
weekday.ave$interval <- as.numeric(row.names(weekday.ave))
weekday.ave$weekdays <- as.factor(c("weekdays"))
View(weekday.ave)
weekend.ave <- data.frame(average = sapply(split(weekend.act$step,weekend.act$interval),mean,na.rm=TRUE))
weekend.ave$interval <- as.numeric(row.names(weekend.ave))
weekend.ave$weekdays <- as.factor(c("weekend"))
View(weekend.ave)
average <- rbind(weekday.ave,weekend.ave)
View(average)
ggplot(average,aes(interval,average)) +facet_grid (weekdays~.) + geom_line()
ggplot(average,aes(interval,average)) +facet (weekdays~.) + geom_line()
_grid
ggplot(average,aes(interval,average)) +facet_grid (weekdays~.) + geom_line()
activity <- read.csv("activity.csv",header=TRUE,colClasses=c("numeric","Date","numeric"),na.strings="NA")
library(lubridate)
activity$date <- ymd(activity$date) ##transform column date as a date
# Sum of total steps per day
totalsteps <- data.frame(totalsteps = sapply(split(activity$step,activity$date),sum,na.rm=TRUE))
## Histogram of the total number of   steps taken each day
library(ggplot2)
qplot(totalsteps,data = totalsteps,xlab="Total steps per day",ylab="Count",
main="Histogram of the total number of   steps taken each day")
meansteps <- mean(totalsteps$totalsteps)
mediansteps <- median(totalsteps$totalsteps)
## average steps across intervals
averagesteps <- data.frame(average = sapply(split(activity$step,activity$interval),mean,na.rm=TRUE))
averagesteps$interval <- as.numeric(row.names(averagesteps))
## plot
ggplot(averagesteps,aes(interval,average)) + geom_line()
## Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?
maxsteps <- subset(averagesteps$interval,averagesteps$average == max(averagesteps$average))
averagesteps <- data.frame(average = sapply(split(activity$step,
activity$interval),mean,na.rm=TRUE))
averagesteps$interval <- as.numeric(row.names(averagesteps))
ggplot(averagesteps,aes(interval,average)) + geom_line()
maxsteps <- subset(averagesteps$interval,averagesteps$average == max(averagesteps$average))
maxsteps <- subset(averagesteps$interval,
averagesteps$average == max(averagesteps$average))
missing <- sum(is.na(activity$steps))
activity2 <- activity
for (i in 1:nrow(activity2))
{
if (is.na(activity2[i,1]) == TRUE)
{
x <- subset(activity2,activity2[,3] == activity2[i,3])
activity2[i,1] <- mean(x$steps,na.rm=TRUE)
}
}
# Sum of total steps per day
totalsteps2 <- data.frame(totalsteps =
sapply(split(activity2$step,activity2$date),sum,na.rm=TRUE))
qplot(totalsteps,data = totalsteps2,xlab="Total steps per day",ylab="Count",
main="Histogram of the total number of   steps taken each day")
meansteps2 <- mean(totalsteps2$totalsteps)
mediansteps2 <- median(totalsteps2$totalsteps)
weekday.act <- data.frame(subset(activity2,activity2$weekdays == "weekday"))
weekend.act <- data.frame(subset(activity2,activity2$weekdays == "weekend"))
weekday.ave <- data.frame(average = sapply(split(weekday.act$step,
weekday.act$interval),mean,na.rm=TRUE))
weekday.ave$interval <- as.numeric(row.names(weekday.ave))
weekday.ave$weekdays <- as.factor(c("weekdays"))
weekend.ave <- data.frame(average = sapply(split(weekend.act$step,
weekend.act$interval),mean,na.rm=TRUE))
weekend.ave$interval <- as.numeric(row.names(weekend.ave))
weekend.ave$weekdays <- as.factor(c("weekend"))
average <- rbind(weekday.ave,weekend.ave)
weekday.ave <- data.frame(average = sapply(split(weekday.act$step,
weekday.act$interval),mean,na.rm=TRUE))
weekday.ave$interval <- as.numeric(row.names(weekday.ave))
weekday.ave$weekdays <- as.factor(c("weekdays"))
weekday.ave <- data.frame(average = sapply(split(weekday.act$step,
weekday.act$interval),mean,na.rm=TRUE))
weekday.ave$interval <- as.numeric(row.names(weekday.ave))
weekday.ave$weekdays <- as.factor(c("weekdays"))
weekday.ave$weekdays <- c("weekdays"))
weekday.ave$weekdays <- c("weekdays")
weekday.ave <- data.frame(average = sapply(split(weekday.act$step,weekday.act$interval),mean,na.rm=TRUE))
weekday.ave$interval <- as.numeric(row.names(weekday.ave))
weekday.ave$weekdays <- as.factor(c("weekdays"))
activity <- read.csv("activity.csv",header=TRUE,colClasses=c("numeric","Date","numeric"),na.strings="NA")
activity$date <- ymd(activity$date) ##transform column date as a date
activity2 <- activity
for (i in 1:nrow(activity2))
{
if (is.na(activity2[i,1]) == TRUE)
{
x <- subset(activity2,activity2[,3] == activity2[i,3])
activity2[i,1] <- mean(x$steps,na.rm=TRUE)
}
}
activity2$weekdays <- as.factor(weekdays(activity2$date,abbreviate=TRUE))
levels(activity2$weekdays) <-c("weekend","weekday","weekday","weekday","weekday","weekend","weekday")
str(activity2)
weekday.act <- data.frame(subset(activity2,activity2$weekdays == "weekday"))
weekend.act <- data.frame(subset(activity2,activity2$weekdays == "weekend"))
str(weekday.act)
str(weekend.act)
weekday.ave <- data.frame(average = sapply(split(weekday.act$step,weekday.act$interval),mean,na.rm=TRUE))
weekday.ave$interval <- as.numeric(row.names(weekday.ave))
weekday.ave$weekdays <- as.factor(c("weekdays"))
weekend.ave <- data.frame(average = sapply(split(weekend.act$step,weekend.act$interval),mean,na.rm=TRUE))
weekend.ave$interval <- as.numeric(row.names(weekend.ave))
weekend.ave$weekdays <- as.factor(c("weekend"))
average <- rbind(weekday.ave,weekend.ave)
ggplot(average,aes(interval,average)) +facet_grid (weekdays~.) + geom_line()
ggplot(average,aes(interval,average)) +facet_grid (weekdays~.) + geom_line()
activity <- read.csv("activity.csv",header=TRUE,colClasses=c("numeric","Date","numeric"),na.strings="NA")
activity$date <- ymd(activity$date) ##transform column date as a date
activity2 <- activity
for (i in 1:nrow(activity2))
{
if (is.na(activity2[i,1]) == TRUE)
{
x <- subset(activity2,activity2[,3] == activity2[i,3])
activity2[i,1] <- mean(x$steps,na.rm=TRUE)
}
}
activity2$weekdays <- as.factor(weekdays(activity2$date,abbreviate=TRUE))
levels(activity2$weekdays) <-c("weekend","weekday","weekday","weekday","weekday","weekend","weekday")
summary(activity2)
str(activity2)
# jusque là, c'est ok
weekday.act <- data.frame(subset(activity2,activity2$weekdays == "weekday"))
weekend.act <- data.frame(subset(activity2,activity2$weekdays == "weekend"))
str(weekday.act)
str(weekend.act)
# jusque là, c'est ok
weekday.ave <- data.frame(average = sapply(split(weekday.act$step,weekday.act$interval),mean,na.rm=TRUE))
weekday.ave$interval <- as.numeric(row.names(weekday.ave))
weekday.ave$weekdays <- as.factor(c("weekdays"))
weekend.ave <- data.frame(average = sapply(split(weekend.act$step,weekend.act$interval),mean,na.rm=TRUE))
weekend.ave$interval <- as.numeric(row.names(weekend.ave))
weekend.ave$weekdays <- as.factor(c("weekend"))
average <- rbind(weekday.ave,weekend.ave)
ggplot(average,aes(interval,average)) +facet_grid (weekdays~.) + geom_line()
View(weekday.ave)
setwd("~/GitHub/datasciencecoursera")
activity <- read.csv("./data/activity.csv",header=TRUE,colClasses=c("numeric","Date","numeric"),na.strings="NA")
View(activity)
activity <- read.csv("./data/activity.csv",header=TRUE,colClasses=c("numeric","Date","numeric"),na.strings="NA")
View(activity)
activity <- read.csv("./data/activity.csv",header=TRUE,colClasses=c("numeric","Date","numeric"),na.strings="NA")
View(activity)
activity <- read.csv("./data/activity.csv",header=TRUE,colClasses=c("numeric","Date","numeric"),na.strings="NA")
